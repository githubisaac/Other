SELECT 
   test_events.test_id
  ,test_events.test_assignment 
  ,test_events.user_id 
  ,COUNT(distinct (CASE WHEN orders.created_at > test_events.event_time 
                        then invoice_id 
                        ELSE NULL 
                    END)) as orders_after_assignment
  ,COUNT(distinct (CASE WHEN orders.created_at > test_events.event_time 
                        then line_item_id
                        ELSE NULL 
                    END)) as items_after_assignment
  ,SUM((CASE WHEN orders.created_at > test_events.event_time 
                        then price 
                        ELSE 0
                    END)) as total_revenue
FROM 
  (
  SELECT 
    event_id
    ,event_time 
    ,user_id
    ,max(CASE WHEN parameter_name='test_id'
          then cast (parameter_value as int)
          ELSE NULL
          END) as test_id
    ,MAX(CASE WHEN parameter_name='test_assignment'
          then cast(parameter_value as int) 
          ELSE NULL
          END) as test_assignment
  FROM 
    dsv1069.events
  WHERE 
    event_name='test_assignment'
  GROUP BY 
    event_id
    ,event_time 
    ,user_id
  ) as test_events
LEFT JOIN 
  dsv1069.orders 
ON 
  orders.user_id=test_events.user_id 
GROUP BY
   test_events.test_id
  ,test_events.test_assignment 
  ,test_events.user_id 
